/*
//      _/      _/  _/_/_/  _/      _/  _/_/_/  _/      _/    _/_/_/
//     _/_/  _/_/    _/      _/  _/      _/    _/_/    _/  _/
//    _/  _/  _/    _/        _/        _/    _/  _/  _/    _/_/
//   _/      _/    _/      _/  _/      _/    _/    _/_/        _/
//  _/      _/  _/_/_/  _/      _/  _/_/_/  _/      _/  _/_/_/
*/

@import "../bourbon/bourbon";

/* ==========================================================================
   Colors & Shades
   ========================================================================== */
   
$brown: #3f3014;
$tan: #bc9633;
$blue: #d6e8f7;
$gray: #353a44;
$green-light: #c8cda3;
$green: #536936;
$light-gray: #989a99;
$black: #000000;
   
   

/***** DEFAULT COLORS *****/

$base-color: $brown; // Should appear ok with white text
$highlight-color: $green; // Primary color, buttons
$notification-color: $green-light; // Alert color
$action-color: #D1A005; // I don't know, lol

$positive-color: #0fa60b; // Good things
$negative-color: #ea3009; // Bad things

$primary-color: $base-color; // Primary color
$secondary-color: $highlight-color; // Secondary color
$tertiary-color: $notification-color; // Tertiary color
$link-color: $green; // Link

$dark-color: $gray; // Dark color
$medium-color: #cccccc; // Medium color
$light-color: #f9f9f9; // Light color

/***** TEXT SELECTION COLOR *****/

::selection {
  background: $primary-color; color: #fff;
}
::-moz-selection {
  background: $primary-color; color: #fff;
}

/* ==========================================================================
   Fonts
   ========================================================================== */

$font: 'Cambay', sans-serif;
$suma: 'Sumana', serif;
$cambay: $font;

@mixin s_reg { font-family: $suma; font-weight: 400; }
@mixin s_bold { font-family: $suma; font-weight: 700; }
@mixin c_reg { font-family: $cambay; font-weight: 400; }
@mixin c_bold { font-family: $cambay; font-weight: 700; }


/* ==========================================================================
   Loading Indicator
   ========================================================================== */



/* ==========================================================================
   Mixins
   ========================================================================== */

@mixin cursor() { cursor: hand; cursor: pointer; &:hover, &:focus { cursor: hand; cursor: pointer; } }
@mixin ellipsis() { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
@mixin plain { margin: 0; padding: 0; list-style: none; }
@mixin cf() { &:after { content: ""; display: table; clear: both; } }
@mixin flipit() { display: block; -webkit-transform: matrix(-1, 0, 0, 1, 0, 0); -moz-transform: matrix(-1, 0, 0, 1, 0, 0); -o-transform: matrix(-1, 0, 0, 1, 0, 0); transform: matrix(-1, 0, 0, 1, 0, 0); }
@mixin box-size($type) { @if $type == content { box-sizing: content-box; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; } @else if $type == border { box-sizing: border-box; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; } @else if $type == padding { box-sizing: padding-box; -webkit-box-sizing: padding-box; -moz-box-sizing: padding-box; } }
@mixin font-size($size:99, $line:99) { @if $size != 99 { font-size: ($size * 10) + px; font-size: $size + rem; } @if $line != 99 { line-height: ($line * 10) + px; line-height: $line + rem; } }
@mixin font-size-import($size:99, $line:99) { @if $size != 99 { font-size: ($size * 10) + px !important; font-size: $size + rem !important; } @if $line != 99 { line-height: ($line * 10) + px !important; line-height: $line + rem !important; } }
@mixin icomoon($c) { font-family: 'icomoon'; speak: none; font-style: normal; font-weight: normal; font-variant: normal; text-transform: none; line-height: 1; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; content: $c; }
@mixin boop() { &:active { position: relative; top: 1px; } }
@mixin align($dir) { position: absolute; @if $dir == vertical { top: 50%; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); } @else if $dir == horizontal { left: 50%; -webkit-transform: translateX(-50%); -ms-transform: translateX(-50%); transform: translateX(-50%); } @else if $dir == both { top: 50%; left: 50%; -webkit-transform: translateX(-50%) translateY(-50%); -ms-transform: translateX(-50%) translateY(-50%); transform: translateX(-50%) translateY(-50%); } }
@mixin znext($layer) { -webkit-transform:translateZ($layer + px); -moz-transform:translateZ($layer + px); -o-transform:translateZ($layer + px); transform:translateZ($layer + px); }
@mixin bw() { filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); filter: gray; -webkit-filter: grayscale(100%); }
@mixin bw_remove() { filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); -webkit-filter: grayscale(0%); }

/* ==========================================================================
   Animations
   ========================================================================== */
   
@include keyframes(animate-display-on) {
  0% { display: none; opacity: 0; @include transform(translateY(-15px)); }
  1% { display: block; opacity: 0; @include transform(translateY(-15px)); }
  100% { opacity: 1; @include transform(translateY(0)); }
}
@include keyframes(animate-display-off) {
  0% { display: block; opacity: 1; @include transform(translateY(0)); }
  99% { display: block; opacity: 0; @include transform(translateY(-15px)); }
  100% { display: none; @include transform(translateY(-15px)); }
}

/* ==========================================================================
   Media Queries
   ========================================================================== */
   
$bp0: 1140px;
$bp1: 980px;
$bp2: 840px;
$bp3: 720px;
$bp4: 680px;
$bp5: 600px; // Mobile Menu (Sm Tablet Portrait)
$bp6: 480px; // Mobile Landscape
$bp7: 320px; // Mobile Portrait

/* Major Layout Break Points */
$tablet_width: $bp1;
$mobile_width: $bp5;

@mixin respond-to($bp) {
  @media only screen and (max-width: $bp) { @content; }
}
@mixin respond-above($bp) {
  @media only screen and (min-width: $bp + 1) { @content; }
}
@mixin respond-to-height($bp) {
  @media only screen and (max-height: $bp) { @content; }
}
@mixin respond-above-height($bp) {
  @media only screen and (min-height: $bp + 1) { @content; }
}
@mixin retina() {
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (   min--moz-device-pixel-ratio: 2),
    only screen and (     -o-min-device-pixel-ratio: 2/1),
    only screen and (        min-device-pixel-ratio: 2),
    only screen and (                min-resolution: 192dpi),
    only screen and (                min-resolution: 2dppx) { @content }
}
